name: ${PROJECT_NAME:-netbox-oss}
services:
  postgres:
    image: docker.io/postgres:17-alpine
    healthcheck:
      test: pg_isready -q -t 2 -d $$POSTGRES_DB -U $$POSTGRES_USER
      start_period: 20s
      timeout: 30s
      interval: 10s
      retries: 5
    ports:
      - "5432:5432"
    env_file: env/postgres.env
    volumes:
      - oss-postgres-data:/var/lib/postgresql/data

  redis:
    image: docker.io/valkey/valkey:8.1-alpine
    command:
      - sh
      - -c # this is to evaluate the $REDIS_PASSWORD from the env
      - valkey-server --appendonly yes --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    ports:
      - "6379:6379"
    healthcheck: &redis-healthcheck
      test: '[ $$(valkey-cli --pass "$${REDIS_PASSWORD}" ping) = ''PONG'' ]'
      start_period: 5s
      timeout: 3s
      interval: 1s
      retries: 5
    env_file: env/redis.env
    volumes:
      - oss-redis-data:/data

  redis-cache:
    image: docker.io/valkey/valkey:8.1-alpine
    command:
      - sh
      - -c # this is to evaluate the $REDIS_PASSWORD from the env
      - valkey-server --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    ports:
      - "7379:6379"
    healthcheck: *redis-healthcheck
    env_file: env/redis-cache.env
    volumes:
      - oss-redis-cache-data:/data

volumes:
  oss-postgres-data:
    driver: local
  oss-redis-data:
    driver: local
  oss-redis-cache-data:
    driver: local

networks:
  # You must bootstrap docker with this network.
  # `docker network create netbox`
  default:
    external: true
    name: netbox
